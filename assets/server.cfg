// Password for private servers. Uncomment this if you wish to run a private server
//password = "PRIVATESERVERPASSWORD";

/*
 * Password to protect admin access
 * type: #login mypassword
 * in ingame client chatbox to login as admin
 * type: #missions
 * in ingame client chatbox to display the mission list
*/
passwordAdmin = "PASSWORDADMIN";

// The name of the server that shall be displayed in the public server list
hostname="THIS IS THE BEST ARMA3 SERVER";

/*
 * Message of the day. It can be several lines, separated by comma
 * empty messages "" will not be displayed at all but are only for increasing the interval
*/
motd[]=
{
	"",
	"Join us on TeamSpeak ~ groupname.ts.nfoservers.com",
	"",
	"If you have any questions, don't hesitate to ask for an Admin!"
};

// Time interval (in seconds) between each message of the day
motdInterval=180;

/*
 * 25% or more players need to vote for mission to become effective
 * set to 1.5 to turn off missions voting
*/
voteThreshold=0.25;

/*
 * Maximum amount of server slots
 * server will always display 64 slots if maxPlayers is >64 and server is empty
*/
maxPlayers=64;

/*
 * Gamespy reporting url for public server list inclusion
 * use 127.0.0.1 for LAN server
*/
//reportingIP="arma3pc.master.gamespy.com";

/*
 * If specified player connects/disconnects and player id are written to file.
 * log file is persistant and appends data on server restart.
*/
logfile="myserver.log";

/*
 * Specifies the mission rotation and related difficulty settings.
 * leave blank i.e   class Missions {};
 * to enable player's selection from mission list & difficulty settings
 * (voted on if no admin logged in)
*/

// MISSIONS CYCLE (see below)
class Missions
{
          class Mission1
         {
              template="ArmA3_Wasteland.Tanoa";
              difficulty="Custom";
          };
};

// If class missions is blank start voting when 1 players connect.
voteMissionPlayers=0;

// Do not allow players with duplicate ids to connect
kickduplicate=1;

// If set to 1 players must use exactly the same -mod= startup parameter as the server.
equalModRequired=0;

// If set to 1, Voice over Net will not be available
disableVoN=0;

/*
 * Quality from 1 to 10
 * refer to:
 * http://community.bistudio.com/wiki/ArmA:_Multiplayer#VOIP_support
 * for codec info. 7 is the best.
*/
vonCodecQuality=7;


/*
 * Set the timestamp format used on each report line in server-side RPT file.
 * possible values are:
 * none (default), short & full
*/
timeStampFormat=full;

/*
 * Enables persistent battlefield
 * dependent on the mission specifiying persistence, otherwise has no effect.
 * missions must contain either instant respawn or base respawn options located in the missions description.ext file
*/
persistent=1;

/*
 * Enables signature verification for addons
 * this will prevent pbo hacks by only allowing pbos that pass servers public key checks
*/
verifySignatures=1;

/*
 * Enables BattlEye.
 * You can find more information on BattlEye at http://community.bistudio.com/wiki/BattlEye
 * BattlEye also has rcon support that you can enable by adding a line like this to
 * BattlEye/beserver.cfg:
 *
 * RConPassword yourpassword
 *
 */
BattlEye=1;

// jvon_enabled [0,1] - required
//      Configures this server to push automatic launches and connection configuration to clients. Without this setting,
//      clients will have to manually connect to your JVON server.
// Default Value: 0
jvon_enabled = 1;

// jvon_required [0,1] - optional
//      Force players to utilize JVON to play on the server. This will disable VON, and kick players who do not have
//      JVON - or who stay connected without JVON for N-seconds. This enforces not only loading JVON, but using the JVON
//      launcher as well if it is enabled.
//      TODO FUTURE: This option could enforce muting Teamspeak/Mumble/Ventrillo.
// Default Value: 0
jvon_required = 0;

// SIGNATURE VERIFICATION
onUnsignedData = "kick (_this select 0)";
onHackedData = 	"kick (_this select 0)";
onDifferentData = "";

// Signature timeout fix
regularcheck="{}";

localClient[]={""};
headlessClients[]={""};
